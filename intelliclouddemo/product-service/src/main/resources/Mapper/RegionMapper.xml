<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medcaptain.productservice.dao.mybatis.RegionMapper" >
  <resultMap id="BaseResultMap" type="com.medcaptain.productservice.entity.mybatis.Region" >
    <id column="region_id" property="regionId" jdbcType="INTEGER" />
    <result column="region_name" property="regionName" jdbcType="VARCHAR" />
    <result column="region_level" property="regionLevel" jdbcType="TINYINT" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    region_id, region_name, region_level, parent_id
  </sql>
  <sql id="Base_Column_List_R" >
    r.region_id, r.region_name, r.region_level, r.parent_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_region
    where region_id = #{regionId,jdbcType=INTEGER}
  </select>
  <select id="selectOrganizationId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List_R" />
    FROM
	t_region as r,
	(
	  SELECT
	    region_id
      FROM
	    t_organization
      WHERE
        organization_id = #{organizationId,jdbcType=INTEGER}
    ) AS o
	WHERE
	o.region_id = r.region_id
    LIMIT 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_region
    where region_id = #{regionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.medcaptain.productservice.entity.mybatis.Region" >
    insert into t_region (region_id, region_name, region_level, 
      parent_id)
    values (#{regionId,jdbcType=INTEGER}, #{regionName,jdbcType=VARCHAR}, #{regionLevel,jdbcType=TINYINT}, 
      #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.medcaptain.productservice.entity.mybatis.Region" >
    insert into t_region
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="regionId != null" >
        region_id,
      </if>
      <if test="regionName != null" >
        region_name,
      </if>
      <if test="regionLevel != null" >
        region_level,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="regionId != null" >
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="regionName != null" >
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionLevel != null" >
        #{regionLevel,jdbcType=TINYINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.medcaptain.productservice.entity.mybatis.Region" >
    update t_region
    <set >
      <if test="regionName != null" >
        region_name = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionLevel != null" >
        region_level = #{regionLevel,jdbcType=TINYINT},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where region_id = #{regionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.medcaptain.productservice.entity.mybatis.Region" >
    update t_region
    set region_name = #{regionName,jdbcType=VARCHAR},
      region_level = #{regionLevel,jdbcType=TINYINT},
      parent_id = #{parentId,jdbcType=INTEGER}
    where region_id = #{regionId,jdbcType=INTEGER}
  </update>
</mapper>