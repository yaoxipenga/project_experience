<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medcaptain.cloud.usermanage.mapper.RolePermissionMapper" >
  <resultMap id="BaseResultMap" type="com.medcaptain.cloud.usermanage.entity.RolePermission" >
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_enable" property="roleEnable" jdbcType="TINYINT" />
    <result column="role_deleted" property="roleDeleted" jdbcType="TINYINT" />
    <result column="frontend_resource_id" property="frontendResourceId" jdbcType="INTEGER" />
    <result column="frontend_resource_name" property="frontendResourceName" jdbcType="VARCHAR" />
    <result column="element_id" property="elementId" jdbcType="VARCHAR" />
    <result column="resource_type" property="resourceType" jdbcType="TINYINT" />
    <result column="frontend_remark" property="frontendRemark" jdbcType="VARCHAR" />
    <result column="frontend_enable" property="frontendEnable" jdbcType="TINYINT" />
    <result column="backend_resource_id" property="backendResourceId" jdbcType="INTEGER" />
    <result column="backend_resource_name" property="backendResourceName" jdbcType="VARCHAR" />
    <result column="resource_url" property="resourceUrl" jdbcType="VARCHAR" />
    <result column="request_type" property="requestType" jdbcType="TINYINT" />
    <result column="backend_remark" property="backendRemark" jdbcType="VARCHAR" />
    <result column="backend_enable" property="backendEnable" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_id, role_name, role_enable, role_deleted, frontend_resource_id, frontend_resource_name, 
    element_id, resource_type, frontend_remark, frontend_enable, backend_resource_id, 
    backend_resource_name, resource_url, request_type, backend_remark, backend_enable
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.medcaptain.cloud.usermanage.entity.RolePermissionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_rolepermission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.medcaptain.cloud.usermanage.entity.RolePermissionExample" >
    delete from v_rolepermission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.medcaptain.cloud.usermanage.entity.RolePermission" >
    insert into v_rolepermission (role_id, role_name, role_enable, 
      role_deleted, frontend_resource_id, frontend_resource_name, 
      element_id, resource_type, frontend_remark, 
      frontend_enable, backend_resource_id, backend_resource_name, 
      resource_url, request_type, backend_remark, 
      backend_enable)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleEnable,jdbcType=TINYINT}, 
      #{roleDeleted,jdbcType=TINYINT}, #{frontendResourceId,jdbcType=INTEGER}, #{frontendResourceName,jdbcType=VARCHAR}, 
      #{elementId,jdbcType=VARCHAR}, #{resourceType,jdbcType=TINYINT}, #{frontendRemark,jdbcType=VARCHAR}, 
      #{frontendEnable,jdbcType=TINYINT}, #{backendResourceId,jdbcType=INTEGER}, #{backendResourceName,jdbcType=VARCHAR}, 
      #{resourceUrl,jdbcType=VARCHAR}, #{requestType,jdbcType=TINYINT}, #{backendRemark,jdbcType=VARCHAR}, 
      #{backendEnable,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.medcaptain.cloud.usermanage.entity.RolePermission" >
    insert into v_rolepermission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleEnable != null" >
        role_enable,
      </if>
      <if test="roleDeleted != null" >
        role_deleted,
      </if>
      <if test="frontendResourceId != null" >
        frontend_resource_id,
      </if>
      <if test="frontendResourceName != null" >
        frontend_resource_name,
      </if>
      <if test="elementId != null" >
        element_id,
      </if>
      <if test="resourceType != null" >
        resource_type,
      </if>
      <if test="frontendRemark != null" >
        frontend_remark,
      </if>
      <if test="frontendEnable != null" >
        frontend_enable,
      </if>
      <if test="backendResourceId != null" >
        backend_resource_id,
      </if>
      <if test="backendResourceName != null" >
        backend_resource_name,
      </if>
      <if test="resourceUrl != null" >
        resource_url,
      </if>
      <if test="requestType != null" >
        request_type,
      </if>
      <if test="backendRemark != null" >
        backend_remark,
      </if>
      <if test="backendEnable != null" >
        backend_enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleEnable != null" >
        #{roleEnable,jdbcType=TINYINT},
      </if>
      <if test="roleDeleted != null" >
        #{roleDeleted,jdbcType=TINYINT},
      </if>
      <if test="frontendResourceId != null" >
        #{frontendResourceId,jdbcType=INTEGER},
      </if>
      <if test="frontendResourceName != null" >
        #{frontendResourceName,jdbcType=VARCHAR},
      </if>
      <if test="elementId != null" >
        #{elementId,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        #{resourceType,jdbcType=TINYINT},
      </if>
      <if test="frontendRemark != null" >
        #{frontendRemark,jdbcType=VARCHAR},
      </if>
      <if test="frontendEnable != null" >
        #{frontendEnable,jdbcType=TINYINT},
      </if>
      <if test="backendResourceId != null" >
        #{backendResourceId,jdbcType=INTEGER},
      </if>
      <if test="backendResourceName != null" >
        #{backendResourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceUrl != null" >
        #{resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestType != null" >
        #{requestType,jdbcType=TINYINT},
      </if>
      <if test="backendRemark != null" >
        #{backendRemark,jdbcType=VARCHAR},
      </if>
      <if test="backendEnable != null" >
        #{backendEnable,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medcaptain.cloud.usermanage.entity.RolePermissionExample" resultType="java.lang.Integer" >
    select count(*) from v_rolepermission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update v_rolepermission
    <set >
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleEnable != null" >
        role_enable = #{record.roleEnable,jdbcType=TINYINT},
      </if>
      <if test="record.roleDeleted != null" >
        role_deleted = #{record.roleDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.frontendResourceId != null" >
        frontend_resource_id = #{record.frontendResourceId,jdbcType=INTEGER},
      </if>
      <if test="record.frontendResourceName != null" >
        frontend_resource_name = #{record.frontendResourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.elementId != null" >
        element_id = #{record.elementId,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceType != null" >
        resource_type = #{record.resourceType,jdbcType=TINYINT},
      </if>
      <if test="record.frontendRemark != null" >
        frontend_remark = #{record.frontendRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.frontendEnable != null" >
        frontend_enable = #{record.frontendEnable,jdbcType=TINYINT},
      </if>
      <if test="record.backendResourceId != null" >
        backend_resource_id = #{record.backendResourceId,jdbcType=INTEGER},
      </if>
      <if test="record.backendResourceName != null" >
        backend_resource_name = #{record.backendResourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceUrl != null" >
        resource_url = #{record.resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.requestType != null" >
        request_type = #{record.requestType,jdbcType=TINYINT},
      </if>
      <if test="record.backendRemark != null" >
        backend_remark = #{record.backendRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.backendEnable != null" >
        backend_enable = #{record.backendEnable,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update v_rolepermission
    set role_id = #{record.roleId,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      role_enable = #{record.roleEnable,jdbcType=TINYINT},
      role_deleted = #{record.roleDeleted,jdbcType=TINYINT},
      frontend_resource_id = #{record.frontendResourceId,jdbcType=INTEGER},
      frontend_resource_name = #{record.frontendResourceName,jdbcType=VARCHAR},
      element_id = #{record.elementId,jdbcType=VARCHAR},
      resource_type = #{record.resourceType,jdbcType=TINYINT},
      frontend_remark = #{record.frontendRemark,jdbcType=VARCHAR},
      frontend_enable = #{record.frontendEnable,jdbcType=TINYINT},
      backend_resource_id = #{record.backendResourceId,jdbcType=INTEGER},
      backend_resource_name = #{record.backendResourceName,jdbcType=VARCHAR},
      resource_url = #{record.resourceUrl,jdbcType=VARCHAR},
      request_type = #{record.requestType,jdbcType=TINYINT},
      backend_remark = #{record.backendRemark,jdbcType=VARCHAR},
      backend_enable = #{record.backendEnable,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>